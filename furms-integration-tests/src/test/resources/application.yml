app:
   version: '@project.version@'
server:
   ssl:
      key-store: classpath:keystore.p12
      key-store-type: PKCS12
      key-store-password: the!test
      key-password: the!test
      enabled-protocols: TLSv1.2
   servlet:
      context-path: /
      session:
         persistent: false

furms:
   notification:
      new-policy-template-id: testTemplate
      new-policy-revision-template-id: testTemplate
      new-invitation-template-id: testTemplate
      accepted-invitation-template-id: testTemplate
      rejected-invitation-template-id: testTemplate
      new-application-template-id: testTemplate
      accepted-application-template-id: testTemplate
      rejected-application-template-id: testTemplate
      alarm-resource-usage-template-id: testTemplate
      alarm-resource-usage-without-url-template-id: testTemplate
   invitations:
      expiration-time-in-seconds: 604800
      fenix-form: fenixForm
      site-form: siteForm
      community-form: communityForm
      project-form: projectForm
   unity:
      admin-url: ${furms.unity.url}/rest-admin/v1
      admin-user: password
      admin-password: password
      url: https://localhost:2222
      ssl:
         trust-store: classpath:demoTruststore.jks
         trust-store-password: unicore
      oAuth:
         clientId: oauth-client
         clientSecret: oauth-pass1
   front:
      language: en
      maxSessionInactivity: 600
      secondsBeforeShowingSessionExpirationWarning: 60
   psk:
      centralIdPUser: cidp
      centralIdPSecret: cidppass
   sshkeys:
      cleanStaleRequestsAfter: 60S

spring:
   main:
      banner-mode: 'off'
   datasource:
      url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;MODE=PostgreSQL;DB_CLOSE_ON_EXIT=FALSE;DATABASE_TO_LOWER=TRUE;CASE_INSENSITIVE_IDENTIFIERS=TRUE;
      username: sa
      password: sa
      driver-class-name: org.h2.Driver
   rabbitmq:
      host: localhost
      username: guest
      password: guest
      port: 44444
      connection-timeout: 10000
      ssl:
          enabled: true
          trustStore: ${furms.unity.ssl.trust-store}
          trustStorePassword: ${furms.unity.ssl.trust-store-password}
          algorithm: TLSv1.2
   flyway:
      enabled: true
   security:
      oauth2:
         client:
            provider:
               unity: unity
               unity.authorization-uri: ${furms.unity.url}/oauth2-as/oauth2-authz
               unity.revoke: ${furms.unity.url}/oauth2/revoke
               unity.token-uri: ${furms.unity.url}/oauth2/token
               unity.user-info-uri: ${furms.unity.url}/oauth2/userinfo
               unity.user-name-attribute: sub
            registration:
               unity:
                  authorization-grant-type: authorization_code
                  client-authentication-method: basic
                  clientId: ${furms.unity.oAuth.clientId}
                  clientSecret: ${furms.unity.oAuth.clientSecret}
                  redirect-uri: ${furms.url}/login/oauth2/code/unity
                  scope: openid+profile+single-logout

unity:
   client:
      ssl:
         trust-store: ${furms.unity.ssl.trust-store}
         trust-store-password: ${furms.unity.ssl.trust-store-password}
vaadin:
   closeIdleSessions: false
   compatibilityMode: false
   heartbeatInterval: 172800
   urlMapping: /front/*
   whitelisted-packages: io/imunity/furms/ui/views
